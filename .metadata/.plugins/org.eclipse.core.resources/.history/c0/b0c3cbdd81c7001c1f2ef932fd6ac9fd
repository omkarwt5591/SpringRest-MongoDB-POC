package com.example.demo.service;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entity.DataEntity;
import com.example.demo.repository.DataRepository;
import com.example.demo.request.DataRequest;

@Service
public class DataServiceImpl implements DataService {

	@Autowired
	private DataRepository dataRepository;
	
	
	public String saveData(DataRequest dataRequest) {
		UUID uuid=UUID.randomUUID();
		
		String str=dataRequest.getSpecialCharacter();
		StringBuffer resultSpecialCharacter=new StringBuffer();
	     resultSpecialCharacter=findSpecialCharacter(str);
	     
	     dataRequest.getHighestNumber();
		DataEntity dataEntity=new DataEntity();
		BeanUtils.copyProperties(dataRequest, dataEntity);
		
		return null;
	}
	
	   static StringBuffer findSpecialCharacter(String str) {
		StringBuffer letterOrDigit=new StringBuffer();
		StringBuffer specialChar=new StringBuffer();
		
		for(int i=0; i<str.length();i++) {
			if(Character.isLetterOrDigit(str.charAt(i)))
             letterOrDigit.append(str.charAt(i));
			else
				specialChar.append(str.charAt(i));
				
			
		}
		return specialChar;
	}
	   
	   static Integer findHighest() {
		   int [] arra = new int[] {2,6,1,9,3,14};
		   List<Int> list=Arrays.asList(arra);
		   int max=0;
		   for(int i=0;i<=arra.length;i++) {
			   for(int j=i+1;j<=arra.length;j++)
			   if(arra[i]>arra[j]) {
				  max=arra[i]; 
			   }
			   return max;
		   }
	   }
}
